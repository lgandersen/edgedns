[
    % EdgeDNS Core.
    {edge_core, [
        % List of IP/ports where we listen for incoming DNS queries
        % Note that only UDP is supported at the moment
        % IPv4 example: {listeners, [{"127.0.0.1", 53}]}
        % IPv6 example: {listeners, [{"fe80:beef::", 53}]}
        % IPv4 and IPv6 example: {listeners, [
        %                            {"127.0.0.1", 53},
        %                            {"fe80:beef::", 53}
        %                            ]}
        {listeners, [{"127.0.0.1", 5331}]},

        %% Range of ports used when communicating with upstream DNS-server
        {port_range_resolvers, {5333, 5335}},

        %% Number of points that triggers blocking
        {blocking_threshold, 99999999999999999},

        %% Decay rate of traffic-scoring
        {decay_rate, 0.50},

        %% Should EdgeDNS silently drop DNS responses (used for testing)
        {silent, true},

        %% Do not actually block queries if the source ip have exceed the blocking_threshold
        %% The stats logging should log as if they were blocked (used for testing)
        {no_blocking, false},

        %% Blocking exemption list
        {whitelist, ["1.3.3.7"]},

        %% Frequency (seconds) between stats logging
        {stats_log_frequencey, 60},

        % Number of messages we can handle being
        % delivered to our inbox from the UDP
        % listener.
        {active_message_count, 10},

        % Upstream DNS Server.
        {nameserver, {"89.233.43.71", 53}}
        ]},

    % Lager configuration.
    {lager, [
        % Console colors.
        {colored, true},

        % Log handlers configuration.
        {handlers, [
            % Console logging.
            {lager_console_backend, notice},

            % Error file logging.
            {lager_file_backend, [
                {file, "log/error.log"},
                {level, error},
                {date, "$D0"},
                {count, 5}
            ]},

            % Console file logging.
            {lager_file_backend, [
                {file, "log/console.log"},
                {level, notice},
                {date, "$D0"},
                {count, 5}
            ]}
        ]},

        {extra_sinks,
           [
            {stats_log_lager_event,
             [{handlers,
               [{lager_console_backend, info},
               {lager_file_backend,
                 [{file, "log/stats.log"},
                  {level, info}
                 ]
                }]
            }]},
            {query_log_lager_event,
             [{handlers,
               [{lager_console_backend, info},
                {lager_file_backend, [
                    {file, "log/queries.log"},
                    {level, info}
                    ]}
                ]}
              ]
            }
        ]}
    ]},

    % SASL configuration.
    {sasl, [
        % Log file.
        {sasl_error_logger, {file, "log/sasl-error.log"}},

        % Log type.
        {errlog_type, error},

        % Log directory.
        {error_logger_mf_dir, "log/sasl"},

        % 10 MB max file size.
        {error_logger_mf_maxbytes, 10485760},

        % 5 files max.
        {error_logger_mf_maxfiles, 5}
    ]}
].

%% vim: set ft=erlang :
